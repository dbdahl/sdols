#!/usr/bin/env Rscript

args <- commandArgs(TRUE)

dataScript <- args[1]
estScript <- args[2]

source(paste0("data/",dataScript))  ## Defines clusterings

library(sdols)
pp <- expectedPairwiseAllocationMatrix(clusterings)

time <- system.time(source(paste0("methods/",estScript)))    ## Defines estimate

dirname <- paste0("out/",dataScript)
dir.create(dirname,recursive=TRUE,showWarnings=FALSE)
filename <- paste0(dirname,"/",estScript,".Rd")
save(time,estimate,file=filename)

q()


library(mcclust.ext)
est.avg <- minbinder(pp,method="avg")$cl
est.comp <- minbinder(pp,method="comp")$cl

system.time(est.salso <- salso(pp,nCandidates=1000,budgetInSeconds=0))
system.time(est.salso <- salso(pp))
attr(est.salso,"nScans")
attr(est.salso,"nCandidates")

unlist(latentStructureFit(est.salso,pp))
unlist(latentStructureFit(est.avg,pp))
unlist(latentStructureFit(est.comp,pp))

library(mcclust)
est.avg <- minbinder(pp,method="avg")$cl
latentStructureFit(est.avg,pp)

library(mcclust.ext)
est.greedy <- minbinder.ext(pp,method="greedy")$cl
latentStructureFit(est.greedy,pp)


est.comp <- minbinder(pp,method="comp")$cl
latentStructureFit(est.comp,pp)

est.lg <- minbinder(pp,method="laugreen")$cl
latentStructureFit(est.lg,pp)

library(mcclust.ext)
est.greedy <- minbinder.ext(pp,method="greedy")$cl
latentStructureFit(est.greedy,pp)


