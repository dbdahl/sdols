library(sdols)
getwd()
setwd("R/sdols")
library(sdols)
rscala:::scalaSBTBuildInstallRestart()
library("sdols")
rscala:::scalaSBTBuildInstallRestart()
library("sdols")
rscala:::scalaSBT("clean")
rscala:::scalaSBT("clean",use.cache=FALSE)
library(sdols)
rscala:::scalaSBTBuildInstallRestart()
library("sdols")
rscala:::scalaSBT("clean",use.cache=FALSE)
rscala:::scalaSBT("clean",use.cache=FALSE)
rscala:::scalaSBT("clean", use.cache=FALSE)
debug(rscala:::scalaSBT)
rscala:::scalaSBT("clean", use.cache=FALSE)
rscala:::scalaSBT("clean", FALSE, FALSE)
library(sdols)
rscala:::scalaSBTBuildInstallRestart()
library("sdols")
rscala:::scalaSBTBuildInstallRestart(use.cache=FALSE)
library(sdols)
rscala::scalaSBTBuildInstallRestart(use.cache=FALSE)
library("sdols")
library(sdols)
rscala:::scalaSBTBuildInstallRestart()
library("sdols")
library(sdols)
probabilities <- expectedPairwiseAllocationMatrix(iris.clusterings)
estimate <- salso(probabilities)
latentStructureFit(estimate, probabilities)
expectedCounts <- expectedPairwiseAllocationMatrix(USArrests.featureAllocations)
estimate <- salso(expectedCounts,"featureAllocation")
latentStructureFit(estimate, expectedCounts)
probabilities <- expectedPairwiseAllocationMatrix(iris.clusterings)
estimate <- salso(probabilities)
latentStructureFit(estimate, probabilities)
library(shallot)
library(rscala)
s <- shallot:::s
s * "3+4"
attr(s,"details")$JARs
s + "import scala.collection.parallel"
s2 <- scala("/home/dahl/local/R/devel/lib/R/library/commonsMath/java/scala-2.13/scala-parallel-collections_2.13-0.2.0.jar")
s2 * "3+4"
attr(s2,"details")$JARs
s2 + "import scala.collection.parallel"
s2 <- scala("/home/dahl/local/R/devel/lib/R/library/commonsMath/java/scala-2.13/scala-parallel-collections_2.13-0.2.0.j ar")
s2 * "3+4"
attr(s2,"details")$JARs
s2 + "import scala.collection.parallel"
s2 * "3+4"
s2 <- scala("/home/dahl/local/R/devel/lib/R/library/commonsMath/java/scala-2.13/scala-parallel-collections_2.13-0.2.0.j ar")
s2 * "3+4"
s2 <- scala("/home/dahl/local/R/devel/lib/R/library/commonsMath/java/scala-2.13/scala-parallel-collections_2.13-0.2.0.jar")
s2 * "3+4"
attr(s2,"details")$JARs
s2 * "3+4"
s2 + "import scala.collection.parallel"
s2 <- scala("/home/dahl/local/R/devel/lib/R/library/commonsMath/java/scala-2.13/scala-parallel-collections_2.13-0.2.0.jar", debug=TRUE)
s2 * "3+4"
attr(s2,"details")$JARs
s2 + "import scala.collection.parallel"
scalaConfig(s2)
s <- scala("commonsMath")  # Don't need to include sdols since it imports commonsMath.
library(rscala)
s <- scala("commonsMath")  # Don't need to include sdols since it imports commonsMath.
s <- scala()
s * "4"
s <- scala("commonsMath")  # Don't need to include sdols since it imports commonsMath.
library(rscala)
s <- scala("commonsMath")
library(rscala)
s <- scala("commonsMath")
dependencies
library(sdols)
attr(sdols:::s,"details")$JARs
scalaConfig(s)
scalaConfig(sdols:::s)
sdols:::s + 'import scala.collection.parallel'
library(sdols)
library(sdols)
example(confidence)
clustering
clustering
names(conf)
